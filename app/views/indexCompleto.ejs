<!DOCTYPE html>
<html lang="pt-BR">
<head>
    <title>Cadastro</title>
    <%- include('../views/head'); %>
</head>
<body>
    <%- include('../views/nav'); %>   
  
    <section>
        <div class="container py-5">
            <div class="row d-flex justify-content-center">
                <div class="col-md-10 col-lg-8 col-xl-6">
                    <div class="card" id="chat2">
                        <div class="card-header d-flex justify-content-between align-items-center p-3">
                            <h5 class="mb-0">Chatbot NuSanha</h5>
                            <p>Seu PDF foi carregado! Pergunte e obtenha respostas instantâneas.</p>
                        </div>
                        <div class="card-body scrollable-chat" data-mdb-perfect-scrollbar-init>
                            <% for (let i = 0; i < perguntas.length; i++) { %>
                                <div class="d-flex flex-row justify-content-start">
                                    <img src="https://mdbcdn.b-cdn.net/img/Photos/new-templates/bootstrap-chat/ava3-bg.webp" alt="avatar 1" style="width: 45px; height: 100%;">
                                    <div>
                                        <p class="small p-2 ms-3 mb-1 rounded-3 bg-body-tertiary"><%- perguntas[i] %></p>
                                        <p class="small ms-3 mb-3 rounded-3 text-muted"><%= new Date().toLocaleTimeString() %></p>
                                    </div>
                                </div>
                                <div class="d-flex flex-row justify-content-end mb-4 pt-1">
                                    <div>
                                        <p class="small p-2 me-3 mb-1 text-white rounded-3 bg-primary"><%- respostas[i] %></p>
                                        <p class="small me-3 mb-3 rounded-3 text-muted d-flex justify-content-end"><%= new Date().toLocaleTimeString() %></p>
                                    </div>
                                    <img src="/_img/logoNuSanha.jpg" alt="avatar 2" style="width: 55px; height: 100%; border-radius: 50%;">
                                </div>
                            <% } %>
                        </div>
                        <form id="pergunta" enctype="multipart/form-data" onsubmit="sendMessage(event)">
                            <div class="card-footer text-muted d-flex justify-content-start align-items-center">
                                <img src="https://mdbcdn.b-cdn.net/img/Photos/new-templates/bootstrap-chat/ava3-bg.webp" alt="avatar 3" style="width: 40px; height: 40px;">
                                <label for="question" class="p-4">Faça uma pergunta:</label>
                                <textarea class="form-control mx-2" id="question" name="question" rows="3" required></textarea>
                                <button type="submit" class="btn btn-link p-0">
                                    <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="currentColor" class="bi bi-send" viewBox="0 0 16 16">
                                        <path d="M15.854.146a.5.5 0 0 1 .11.54l-5.819 14.547a.75.75 0 0 1-1.329.124l-3.178-4.995L.643 7.184a.75.75 0 0 1 .124-1.33L15.314.037a.5.5 0 0 1 .54.11ZM6.636 10.07l2.761 4.338L14.13 2.576zm6.787-8.201L1.591 6.602l4.339 2.76z"/>
                                    </svg>
                                </button>
                            </div>
                        </form>
                        <div class="text-center">
                        <button id="export-btn" class="btn btn-primary">Exportar chat para CSV</button>
                        <a href="/index" class="btn btn-primary" role="button">Mudar arquivo-base</a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    
    </section>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js" integrity="sha384-C6RzsynM9kWDrMNeT87bh95OGNyZPhcTNXj1NW7RuBCsyN/o0jlpcV8Qyq46cDfL" crossorigin="anonymous"></script>
<footer>
    <%- include('../views/footer'); %>
</footer>
<!-- <script src="./loader.js" type="module/text/javascript"></script> -->
<script type="module">
    // import { injest_docs } from '../../../loader.js';
    
    document.getElementById('uploadForm').addEventListener('submit', async function(event) {
        event.preventDefault();

        const formData = new FormData();
        const file = document.getElementById('fileUpload').files[0];
        formData.append('fileUpload', file);
        console.log(formData);
        // formData.append('question', question);

        try {
            const response = await fetch('/send', {
                method: 'POST',
                body: formData,
            });

            const result = await response.text();
            alert(result);
            // Extrair o nome do arquivo do resultado, se necessário
            const uploadedFileName = result.split(': ')[1]; // Assumindo que o resultado é "File uploaded: nome_do_arquivo.extensao"
            console.log(uploadedFileName);  
            // Saving to local storage
            // localStorage.setItem('nome', uploadedFileName);
                    // Construct the URL with the filename as a query parameter
        const url = `/carregar?filename=${uploadedFileName}`;

        // Send a GET request to the /carregar endpoint
        const loaderResponse = await fetch(url, {
            method: 'GET'
        });



        } catch (error) {
            console.error('Error uploading file:', error);
            alert('Error uploading file.');
        };
        

    });
</script>

<script>
    document.getElementById('pergunta').addEventListener('submit', function(event) {
        event.preventDefault(); // Evita o envio padrão do formulário

        // Captura o valor da pergunta
        var pergunta = document.getElementById('question').value;

        // Define a URL da rota onde você deseja enviar a pergunta (substitua pela sua rota)
        var url = '/ask';

        // Envia a pergunta via fetch
        fetch(url, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({ question: pergunta }),
        })
        .then(response => {
            if (!response.ok) {
                throw new Error('Erro ao enviar pergunta. Status: ' + response.status);
            }
            window.location.href = 'indexCompleto'; // Redirecionar para a página indexCompleto
            return response.json();
        })
        .catch(error => {
            alert(error.message);
            // Tratar erros aqui, se necessário
        });
    });
</script>
<script>
    document.getElementById('export-btn').addEventListener('click', function(event) {
        event.preventDefault(); // Evita o envio padrão do formulário
        fetch('/export-csv', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            }
        })
        .then(response => {
                if (!response.ok) {
                    throw new Error('Erro ao exportar CSV. Status: ' + response.status);
                }
                return response.blob();
            })
            .then(blob => {
                const url = window.URL.createObjectURL(blob);
                const a = document.createElement('a');
                a.href = url;
                a.download = 'dados.csv';
                document.body.appendChild(a);
                a.click();
                a.remove();
            })
            .catch(error => {
                alert(error.message);
            });
    })
</script>



</body>

</html>